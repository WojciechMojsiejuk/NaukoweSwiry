def dodawanie(a,b): #funkcja jest zdefiniowana jako def nie potrzebny jest typ jaki zwraca, jezeli nie przyjmuje parametrow to piszemy pusty nawias()    return a+bb=3 #definiowanie zmiennych nie wymaga podania typua=2c="abc"print(dodawanie(a,b)) #wywolanie funkcji to dodawania(a,b) wrzucone do funkcji print by od razu wypisalo returnprint(a,b,c)#print(dodawanie(a,c)) python jest na tyle madry ze nie przyjmie c bo wg niego to stringprint(type(a),type(b),type(c)) #type() zwraca typ zmiennej w pythonie to bedzie class int x2 class str KLASA? Well w Pythonie wszystko jest obiektem XDstr(a)#zamieni a na stringfloat(b)#zamieni b na float#int(c)nie ma tak latwo abc nie zostanie zmienione na liczbec="a"print(ord(c)) #ord do zamiany chara na liczbeprint(a,b,c)name = input("Podaj imie ")name2 = name + " " + "Kowalska" #zmienne mozna laczyc lecz dla wlasnego bezpieczenstwa uwazac z typami zmiennychprint("Witaj %s" % name)               #Ponizej 3 sposoby wypisawania w pythonieprint("Witaj {}".format(name2))print("Witaj",name2,"Jak sie masz?")print("Witaj",name2,"co tam u ciebie?", sep='<3') #sep oznacza czym maja byc oddzielane wyrazy tutaj <3napis = "abcdeabcde"print(napis.index("a"))'''Wyszukuje kiedy pierwszy raz pojawia sie a i wypisuje jego index BTW Komentarze w Pythone robi sie przy pomocy 3 cudzyslowi '''#A pojedyncze jak zauwazyliscie przy pomocy hash i ogolnie te sa preferowaneprint(napis.index("d"))napis = "abrakadabra"print (napis.count("a")) # liczy ile razy pojawia sie aprint (napis.count("ab"))print (napis[3:7])#wypisze znaki z tablicy od indeksu 3 do 7print (napis[5:])#wypisze od 5 indeksu do koncaprint (napis[:4]) #wypisze od 0 do 4 indeksuprint (napis[-3:-1]) #wypisze 3 indeks od konca do 1 indeksu od koncax=3print(x==4) #wypisze false bo x nie rowna sie 4imie = "Grzegorz"if imie in ["Zbigniew","Szymon","Grzegorz"]: #in sprawdza czy zmienna zawiera sie w jakims zbiorze    print("Dupa") #w pythonie nie ma nawiasow ani srednikow, wejscie do petli zaznacza sie tabem (4 spacje)else:    imie="Zbigniew Szymon Grzegorz"imie="Zbigniew Szymon Grzegorz"if imie in ["Zbigniew","Szymon","Grzegorz"]:    print("DUUUUUPA") #"Zbigniew Szymon Grzegorz" nie nalezy do zbioru "Zbigniew" "Grzegorz" "Szymon"x = [1,2,3]y = [1,2,3]print (x == y) # Wypisze True bo porownuje wartosciprint (x is y) # False bo sprawdza czy listy x i y wskazuje na to samo miejsce w pamiecinapis = "Ala ma kota Kuba ma pierdolca"tablica = napis.split(" ") #podzielilismy napis i wpisalismy do listyprint(tablica)for element in tablica: #przeiterujemy po elementach listy    print(element)#Jezeli chcemy wykorzystac for jak w innych jezykach czyli podac mu konkretny zakres uzywamy range oraz xrange(python 2.x)for x in range(5): #xrange wypisuje od 0 czyli 0 1 2 3 4    print(x)for x in range(3,6): #wypisze 3 4 5 czemu nie 6?    print(x) #W sumie nigdy nie zrozumialem czemu pierwszy poczatek przedzialu traktuje jako zamkniety a koniec jako otwartyclass Klasa:    imie = "Andrzej" #domyslna wartosc w klasie    def funkcja(self):        print("Hehe")#kiedy pojawiaja sie klasy pojawia sie selfstudent = Klasa()print(student.imie) #wypisze domyslna wartoscstudent.imie="Ryszard"print(student.imie) #wypisze wartosc przypisana dla obiektu w klasiestudent.funkcja() #wykona funkcje funkcja w klasie Klasa XD#Dla zainteresowanych polecam sprawdzic co ta sa sets, dictionary, tuple oraz lambda i samemu z nimi sie pobawic#Majac podstawy rozpisane tutaj nie powinno to stanowic problemu